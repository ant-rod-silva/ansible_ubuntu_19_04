---
# tasks file for openldap

- name: Check Ubuntu release
  raw: cat /etc/lsb-release | grep DISTRIB_RELEASE | cut -d "=" -f2
  register: ubuntu_release
  changed_when: false

- debug: msg="Running Ubuntu version {{ ubuntu_release.stdout|float }}"

- name: Installing [python-pip] / [python3-pip]
  apt:
    pkg:
      - python-pip
      - python3-pip
    state: present
  become: yes

- name: Installing [python-ldap] dependencies
  apt:
    pkg:
      - python-dev
      - libldap2-dev
      - libsasl2-dev
      - libssl-dev
    state: present
  become: yes

- name: Installing prerequisites (dnspython, python-ldap)
  pip:
    name:
      - dnspython
      - python-ldap
    executable: pip3

- name: Installing prerequisites (dnspython, python-ldap)
  pip:
    name:
      - dnspython
      - python-ldap
    executable: pip

- name: Set hostname (hostnamectl)
  shell: hostnamectl set-hostname {{ ldap_hostname }}
  become: yes

- name: Set hostname (/etc/hosts)
  shell: echo "{{ machine_ip }} {{ ldap_hostname }}" | sudo tee -a /etc/hosts
  become: yes
    
- name: Check debconf for slapd entries
  shell: (debconf-get-selections | grep -q -s slapd); echo $?
  register: debconf
  ignore_errors: yes

- name: "debconf for slapd"
  debconf: name=slapd question='slapd/no_configuration' value='false' vtype='boolean'
  when: debconf.stdout == "1"

- name: debconf for slapd (domain)
  debconf: name=slapd question='slapd/domain' value="{{ domain }}" vtype='string'
  when: debconf.stdout == "1"

- name: "debconf for slapd (org)"
  debconf: name=slapd question='shared/organization' value="{{ org }}" vtype='string'
  when: debconf.stdout == "1"

- name: Set debconf slapd password1
  debconf: name=slapd question="slapd/password1" value="{{ ldap_pw }}" vtype="password"
  when: debconf.stdout == "1"
    
- name: Set debconf slapd password2
  debconf: name=slapd question="slapd/password2" value="{{ ldap_pw }}" vtype="password"
  when: debconf.stdout == "1"

- name: "debconf for slapd (backend)"
  debconf: name=slapd question='slapd/backend' value='MDB' vtype='select'
  when: debconf.stdout == "1"

- name: "debconf for slapd (purge_database)"
  debconf: name=slapd question='slapd/purge_database' value='false' vtype='boolean'
  when: debconf.stdout == "1"

- name: "debconf for slapd (move_old_database)"
  debconf: name=slapd question='slapd/move_old_database' value='true' vtype='boolean'
  when: debconf.stdout == "1"

- name: "debconf for slapd (allow_ldap_v2)"
  debconf: name=slapd question='slapd/allow_ldap_v2' value='false' vtype='boolean'
  when: debconf.stdout == "1"

- name: Installing openldap
  apt:
    pkg:
      - slapd
      - ldap-utils
    state: present
  become: yes

- name: Allow all access to tcp port 389
  ufw:
    rule: allow
    port: 389
    proto: tcp

- name: Allow all access to tcp port 636
  ufw:
    rule: allow
    port: 636
    proto: tcp

- name: Make sure we have [people] entry
  ldap_entry:
    dn: ou=people,dc=example,dc=com
    objectClass: organizationalUnit

- name: Make sure we have [groups] entry
  ldap_entry:
    dn: ou=groups,dc=example,dc=com
    objectClass: organizationalUnit
