---
# tasks file for flask_environment
- name: disable lighttpd as service To avoid conflicts with nginx
  systemd: 
    name=lighttpd 
    state=stopped 
    enabled=no
  become: yes

- name: Disable Apache as service To avoid conflicts with nginx
  service:
    name=apache2
    state=stopped
    enabled=no
  become: yes

- name: Installing Python
  apt:
    pkg:
      - tree         # Optional
      - python-pip   # Optional
      - python-dev   # Optional
      - python3-pip
      - python3-dev
      - nginx
    state: present
  become: yes

- name: Install virtualenv package
  with_items: [ setuptools, pip ]
  pip:
    name: virtualenv
    executable: pip

- stat: path={{ virtualenv_dir }}
  register: virtualenv_dir_exists

- name: Permissões no diretório /opt
  command: chown -R {{ usuario_terminal }}:{{ usuario_terminal }} /opt
  become: yes
  args:
    warn: false # set warn=false to prevent warning

- name: Removing {{ virtualenv_dir }}
  file:
    path: '{{ virtualenv_dir }}'
    state: absent
    force: yes

- name: clone hello world repo
  git:
    repo: 'https://github.com/rodrigosantosbr/flask-hello-world.git'
    dest: /opt/flask-hello-world
    update: yes  # Does a git pull if the repo already exists
  
- name: install modules in a virtualenv
  pip:
    requirements: /opt/flask-hello-world/requirements.txt
    virtualenv: /home/{{ ansible_ssh_user }}/{{ app_name }}/env
    virtualenv_python: python3.5

# create a directory if it doesn't exist
- name: Create '{{ virtualenv_dir }}' if it doesn't exist
  file:
    path: '{{ virtualenv_dir }}'
    state: directory
    mode: "u=rwx,g=rwx,o=rwx"
    owner: '{{ usuario_terminal }}'
    group: '{{ usuario_terminal }}'


- name: Create virtualenv "{{ virtualenv_dir }}/python3_test_app"
  pip:
    virtualenv: "{{ virtualenv_dir }}/test_app"
    virtualenv_python: python3.7
    requirements: "{{ app_dir }}/requirements.txt"

- name: u=rwx,g=rwx,o=r for '{{ virtualenv_dir }}/python3_test_app' dir
  file:
    path: '{{ virtualenv_dir }}/test_app'
    state: directory
    owner: '{{ usuario_terminal }}'
    group: '{{ usuario_terminal }}'
    mode: "u=rwx,g=rwx,o=r"
