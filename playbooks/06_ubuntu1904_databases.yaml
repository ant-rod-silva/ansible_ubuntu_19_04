---

# this playbook does configuration of postgresql 11 on ubuntu 10.04 machine
# ansible-playbook -i inventory.cfg 04_ubuntu_1904_databases.yaml

- name: Executar as instalações e configuracoes do postgresql
  hosts: local
  become: yes
  vars_prompt:
    - name: "sqlite_user_answer"
      prompt: "Install Sqlite (True/False)?"
      private: no
      default: true
    - name: "mongodb_user_answer"
      prompt: "Install Mongodb (True/False)?"
      private: no
      default: true
    - name: "firebird_user_answer"
      prompt: "Install Firebird (True/False)?"
      private: no
      default: true
    - name: "postgresql_user_answer"
      prompt: "Install Postgresql (True/False)?"
      private: no
      default: true
    - name: "pgadmin_user_answer"
      prompt: "Install Pgadmin4 (True/False)?"
      private: no
      default: true
    - name: "dbeaver_user_answer"
      prompt: "Install Dbeaver (True/False)?"
      private: no
      default: true
    - name: "mysql_user_answer"
      prompt: "Install Mysql (True/False)?"
      private: no
      default: true
    - name: "redis_user_answer"
      prompt: "Install Redis (True/False)?"
      private: no
      default: true
    - name: "memcached_user_answer"
      prompt: "Install Memcached (True/False)?"
      private: no
      default: true
    - name: "user_answer"
      prompt: "Proceed (True/False)?"
      private: no
      default: true
  pre_tasks:
    - name: apt-get update
      apt: update_cache=yes
      become: yes # root
      when:
        ansible_distribution == 'Ubuntu' and ansible_distribution_version == '19.04' and user_answer | bool
      tags: apt_update
    - name: Ensure Python 2 is installed
      apt:
        name: 
          - python2
          - python2.7
        state: present
      tags: python2_check
  roles:
    - { role: sqlite, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and sqlite_user_answer|bool }
    - { role: mongodb, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and mongodb_user_answer|bool }
    - { role: firebird, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and firebird_user_answer|bool }
    - { role: postgresql, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and postgresql_user_answer|bool }
    - { role: pgadmin4, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and pgadmin_user_answer|bool }
    - { role: mysql, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and mysql_user_answer|bool }
    - { role: memcached, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool and memcached_user_answer|bool }
    - { role: redis, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and redis_user_answer|bool }
    - { role: dbeaver, become: yes,
        when: 
          ansible_distribution == 'Ubuntu' 
          and ansible_distribution_version == '19.04' 
          and user_answer | bool 
          and dbeaver_user_answer|bool }

