---

# this playbook does configuration of postgresql 11 on ubuntu 10.04 machine
# ansible-playbook -i inventory.cfg 04_ubuntu_1904_databases.yaml

- name: Executar as instalações e configuracoes do postgresql
  hosts: local
  become: yes
  vars_prompt:
    - name: "sqlite_user_answer"
      prompt: "Install Sqlite (True/False)?"
      private: no
      default: true
    - name: "mongodb_user_answer"
      prompt: "Install Mongodb (True/False)?"
      private: no
      default: true
    - name: "firebird_user_answer"
      prompt: "Install Firebird (True/False)?"
      private: no
      default: true
    - name: "postgresql_user_answer"
      prompt: "Install Postgresql (True/False)?"
      private: no
      default: true
    - name: "pgadmin_user_answer"
      prompt: "Install Pgadmin4 (True/False)?"
      private: no
      default: true
    - name: "dbeaver_user_answer"
      prompt: "Install Dbeaver (True/False)?"
      private: no
      default: true
    - name: "mariadb_user_answer"
      prompt: "Install Mariadb (True/False)?"
      private: no
      default: false
    - name: "user_answer"
      prompt: "Proceed (True/False)?"
      private: no
      default: true
  vars:
    usuario_terminal: "{{ lookup('env', 'USER') }}"
  roles:
    - { role: sqlite, 
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '19.04' and user_answer | bool and sqlite_user_answer|bool }
    - { role: mongodb, 
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '19.04' and user_answer | bool and mongodb_user_answer|bool }
    - { role: firebird, 
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '19.04' and user_answer | bool and firebird_user_answer|bool }
    - { role: postgresql, 
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '19.04' and user_answer | bool and postgresql_user_answer|bool }
    - { role: pgadmin4, 
        when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '19.04' and user_answer | bool and pgadmin_user_answer|bool }
  tasks:
    # --------------------------------------------------------
    # MARIADB
    # --------------------------------------------------------
    - name: MariaDB - Installation
      apt:
        pkg:
        - mariadb-server
        - mariadb-client
        state: present
      when:
        ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool and mariadb_user_answer | bool
      register: mariadb_installation
      become: yes

    - name: systemctl enable mariadb
      shell: "systemctl enable mariadb"
      become: yes
      when: 
        mariadb_installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool and mariadb_user_answer | bool

    - name: systemctl start mariadb
      shell: "systemctl start mariadb"
      become: yes
      when: 
        mariadb_installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool and mariadb_user_answer | bool

    - name: Ensure MariaDB service was started
      service: name=mariadb state=started enabled=yes
      when:
        mariadb_installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool and mariadb_user_answer | bool

