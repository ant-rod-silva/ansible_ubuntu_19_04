---

# this playbook does reconfiguration of pgadmin4 ubuntu machine
# adicionar no aplicativo de sessão:
# nohup /usr/bin/python /usr/local/lib/python2.7/dist-packages/pgadmin4/pgAdmin4.py &
# ansible-playbook -K 05_ubuntu_1904_pgadmin.yaml

- name: Executar as instalações e configuracoes do postgresql
  connection: local
  hosts: localhost
  become: yes
  vars_prompt:
    - name: "user_answer"
      prompt: "Deseja instalar apps (true/false)?"
      private: no
      default: true
  vars:
    usuario_terminal: "{{ lookup('env', 'USER') }}"
  tasks:
    - name: hostname
      command: hostname
  
    # --------------------------------------------------------
    # PGADMIN4
    # para executar: sudo python /usr/local/lib/python2.7/dist-packages/pgadmin4/pgAdmin4.py
    # para acessar: http://127.0.0.1:5050
    # --------------------------------------------------------
    - name: Download PgAdmin4
      shell: "wget {{ URL_PGADMIN }} -P /tmp"
      register: download
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    - name: Instalando PgAdmin4
      shell: "pip install /tmp/pgadmin4*.whl"
      register: installation
      when: download is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    # config_local.py
    - name: Criando arquivo {{ PGADMIN_PATH }}/config_local.py
      shell: "touch {{ PGADMIN_PATH }}/config_local.py"
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    - name: echo "SERVER_MODE = False"
      shell: 'echo "SERVER_MODE = False" >> {{ PGADMIN_PATH }}/config_local.py'
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    # setup.py
    - name: Executando PgAdmin4 setup.py
      shell: "python {{ PGADMIN_PATH }}/setup.py"
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    # permissões
    - name: permissões do pgAdmin4.py
      shell: "chmod +x {{ PGADMIN_PATH }}/pgAdmin4.py"
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    - name: permissões do /var/log/pgadmin/
      shell: "chown -R {{ usuario_terminal }}:{{ usuario_terminal }} /var/log/pgadmin/"
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    - name: permissões do /var/lib/pgadmin/
      shell: "chown -R {{ usuario_terminal }}:{{ usuario_terminal }} /var/lib/pgadmin/"
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool

    - name: permissões do /var/log/pgadmin/pgadmin4.log
      shell: "chmod 777 /var/log/pgadmin/pgadmin4.log"
      when: installation is success and ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('19.04', '=') and user_answer | bool
